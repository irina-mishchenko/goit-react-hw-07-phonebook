{"version":3,"sources":["Components/ContactList/ContactListItem/ContactListItem.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","redux/actions.js","redux/operations.js","redux/selectors.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/App.js","redux/reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","getContacts","state","contacts","items","getValue","filter","getVisibleContacts","normalizedFilter","toLowerCase","name","includes","ContactForm","useState","setName","number","setNumber","useEffect","useSelector","dispatch","useDispatch","handleChange","event","target","value","reset","className","s","formContainer","formTitle","onSubmit","e","preventDefault","some","contact","alert","post","then","data","catch","error","message","addContact","form","autoComplete","formLabel","formInput","type","onChange","formButton","ContactListItem","onDeleteContact","id","contactListItem","onClick","contactListButton","ContactList","contactList","map","contactId","delete","Filter","filterContainer","filterLabel","filterInput","App","createReducer","payload","loading","_","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ef11c97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__1-GxK\",\"contact\":\"ContactListItem_contact__19MDF\",\"contactListButton\":\"ContactListItem_contactListButton__3xfjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__31GbT\",\"filterLabel\":\"Filter_filterLabel__t0Dir\",\"filterInput\":\"Filter_filterInput__3L5fu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2JHBl\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\n","import {\r\n    addContactRequest, \r\n    addContactSuccess, \r\n    addContactError, \r\n    deleteContactRequest, \r\n    deleteContactSuccess, \r\n    deleteContactError,\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n} from \"./actions\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n\r\n    axios.get('/contacts')\r\n    .then(({data}) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n    const contact = {\r\n        name,\r\n        number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n    .post('/contacts', contact)\r\n    .then(({data}) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios.delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n}\r\n\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getValue = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n    const contacts = getContacts(state);\r\n    const filter = getValue(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n  \r\n    return contacts.filter(({name}) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n};","import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {addContact, fetchContacts} from \"./../../redux/operations\";\r\nimport {getContacts} from \"./../../redux/selectors\";\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = event => {\r\n    switch (event.target.name) {\r\n      case 'name':\r\n        setName(event.target.value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(event.target.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const identicalName = contacts.some(contact => {\r\n      return contact.name.toLowerCase() === name.toLowerCase();\r\n    });\r\n\r\n    if (identicalName) {\r\n      alert(`${name} is already in contacts!`);\r\n      return;\r\n    };\r\n\r\n    dispatch(addContact(name, number));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div className={s.formContainer}>\r\n      <h2 className={s.formTitle}>Phonebook</h2>\r\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\r\n        <label className={s.formLabel}>\r\n          Name\r\n          <input\r\n            className={s.formInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n          ></input>\r\n        </label>\r\n        <label className={s.formLabel}>\r\n          Number\r\n          <input\r\n            className={s.formInput}\r\n            type=\"number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n          ></input>\r\n        </label>\r\n        <button type=\"submit\" className={s.formButton}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import propTypes from 'prop-types';\r\n\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ contact, number, onDeleteContact, id }) => {\r\n  return (\r\n    <li className={s.contactListItem}>\r\n      <p className={s.contact}>\r\n        {contact}: {number}\r\n      </p>\r\n      <button\r\n        onClick={() => onDeleteContact(id)}\r\n        className={s.contactListButton}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contact: propTypes.string.isRequired,\r\n  number: propTypes.string.isRequired,\r\n  id: propTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport {deleteContact} from \"./../../redux/operations\";\r\nimport { getVisibleContacts } from \"./../../redux/selectors\";\r\n\r\nimport ContactListItem from './ContactListItem/ContactListItem';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList () {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(({ name, id, number }) => {\r\n        return (\r\n          <ContactListItem\r\n            contact={name}\r\n            number={number}\r\n            key={id}\r\n            onDeleteContact={() => dispatch(deleteContact(id))}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport {changeFilter} from \"./../../redux/actions\";\r\nimport {getValue} from \"./../../redux/selectors\";\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getValue);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={s.filterContainer}>\r\n      <label className={s.filterLabel}>\r\n        Find contact\r\n        <input\r\n          className={s.filterInput}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => dispatch(changeFilter(e.target.value))}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;","import ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\n function App() {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList/>\n    </div>\n  );\n}\n\nexport default App;\n\n","import {combineReducers} from 'redux';\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n    addContactRequest, \r\n    addContactSuccess, \r\n    addContactError, \r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError, \r\n    changeFilter,\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n} from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactsRequest]: (state, {payload}) => payload,\r\n    [addContactSuccess]: (state, {payload}) => [payload, ...state],\r\n    [deleteContactSuccess]: (state, {payload}) => state.filter(contact => contact.id !== payload)\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactsRequest]: () => true,\r\n    [fetchContactsSuccess]: () => false,\r\n    [fetchContactsError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, {payload}) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from \"./reducer\";\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './Components/App';\nimport store from \"./redux/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"ContactForm_formContainer__oHbJt\",\"formTitle\":\"ContactForm_formTitle__2hME0\",\"form\":\"ContactForm_form__TXJnq\",\"formLabel\":\"ContactForm_formLabel__4gLcR\",\"formInput\":\"ContactForm_formInput__3IoCl\",\"formButton\":\"ContactForm_formButton__1cXK_\"};"],"sourceRoot":""}